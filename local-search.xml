<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>超强Grid网格布局入门</title>
    <link href="/2021/10/14/%E8%B6%85%E5%BC%BAgrid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%85%A5%E9%97%A8/"/>
    <url>/2021/10/14/%E8%B6%85%E5%BC%BAgrid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>什么是grid网格布局，望文生义，将页面分成一个一个网格状的布局方式称为网格布局，它是目前css布局中最为强大的布局，学会网格布局，将会大幅度减少写css的量，配合vue的组件化开发，将使我们的开发效率更上一层楼。（ps:部分浏览器存在兼容性问题，使用请按需求来）  </p> <div class="note note-secondary">            <p>本文参考了阮一峰老师的博文，阮一峰老师写的非常通俗易懂，本打算直接附上链接供大家自行学习，但是想着写一写博文，有助于自己理解得更透彻，因此还是决定写下这篇博客，文末附上链接，不愿看我写的小伙伴可以直接右边目录跳转至参考资料🤪 </p>          </div> <h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。</p><p>Flex 布局是轴线布局，只能指定”项目”针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成”行”和”列”，产生单元格，然后指定”项目所在”的单元格，可以看作是二维布局。Grid 布局远比 Flex 布局强大。学习grid布局前，先了解以下概念，助于理解学习😄</p><h3 id="容器和项目"><a href="#容器和项目" class="headerlink" title="容器和项目"></a>容器和项目</h3><p>采用网格布局的区域称为容器，容器内部顶层子元素称为项目</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:grid&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如上所示，采用了grid布局的div称为容器<code>container</code>，其项目为容器内顶层子元素<code>div</code>，<code>&lt;p&gt;</code>不是顶层子元素，因此不属于该容器的项目<code>item</code>，故<code>display:grid</code>属性不会对<code>&lt;p&gt;&lt;/p&gt;</code>标签生效</p><h3 id="网格线"><a href="#网格线" class="headerlink" title="网格线"></a>网格线</h3><p>划分网格的线，称为”网格线”（grid line）。水平网格线划分出行，垂直网格线划分出列。</p><p>正常情况下，n行有<span class="label label-warning">n + 1</span>根水平网格线，m列有<span class="label label-warning">m + 1</span>根垂直网格线，比如三行就有四根水平网格线。<br><img src="https://www.wangbase.com/blogimg/asset/201903/1_bg2019032503.png" alt="网格线"><br>如上图所示是一个4行x4列的网格布局，那么它的网格线就有(4+1)根横向网格线，(4+1)根纵向网格线</p><h3 id="行和列"><a href="#行和列" class="headerlink" title="行和列"></a>行和列</h3><p>容器里头的水平区域称为行<code>row</code>,垂直区域称为列<code>column</code><br>结合上面网格线内容，可以得出，n条横/纵网格线生成<code>n-1</code>行/列<br><img src="https://www.wangbase.com/blogimg/asset/201903/1_bg2019032502.png" alt="行/列"><br>如上所示：水平的深色区域就是”行”，垂直的深色区域就是”列”。</p><h3 id="单元格"><a href="#单元格" class="headerlink" title="单元格"></a>单元格</h3><p>行与列交叉形成单元格(cell)<br>正常情况下n行m列会形成<code>n × m</code>个单元格<br>如上图网格线内容所示4行4列则形成16个单元格</p><h2 id="容器属性和项目属性"><a href="#容器属性和项目属性" class="headerlink" title="容器属性和项目属性"></a>容器属性和项目属性</h2><p>Grid布局的属性分为两类,一类是定义在容器上的属性称为容器属性，另一类则是定义在项目上的属性称为项目属性。这一块的知识点建议大家先理解透了上面基础概念,再边看<a href="https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html">阮老师的博文</a>，<a href="https://jsbin.com/guvivum/edit?html,css,output">边敲代码</a>，这样有助于对属性的作用理解的更透彻,博主这边只对属性做个整理。</p><h3 id="容器属性"><a href="#容器属性" class="headerlink" title="容器属性"></a>容器属性</h3><p>对采用Grid网格布局的整个大容器生效的属性</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-tag">div</span>&#123;<br>    <span class="hljs-attribute">display</span>: grid;  <span class="hljs-comment">//设为网格布局（可选inline-grid）</span><br>    grid-template-<span class="hljs-attribute">columns</span>:<span class="hljs-number">120px</span> <span class="hljs-number">120px</span> <span class="hljs-number">120px</span>; <span class="hljs-comment">//设置列宽 可用百分比/fr/repet()函数，具体看阮老师博客</span><br>    grid-template-rows:<span class="hljs-number">150px</span> <span class="hljs-number">150px</span> <span class="hljs-number">150px</span>; <span class="hljs-comment">//设置行高 可用百分比/fr/repet()函数，具体看阮老师博客</span><br>    row-gap: <span class="hljs-number">20px</span>; <span class="hljs-comment">//设置行间距</span><br>    <span class="hljs-attribute">column-gap</span>: <span class="hljs-number">20px</span>; <span class="hljs-comment">//设置列间距</span><br>    &lt;!-- gap:<span class="hljs-number">20px</span>; <span class="hljs-comment">//同时设置行列间距 --&gt;</span><br>    grid-template-areas: <span class="hljs-string">&#x27;a b c&#x27;</span><br>                       <span class="hljs-string">&#x27;d e f&#x27;</span><br>                       <span class="hljs-string">&#x27;g h i&#x27;</span>; <span class="hljs-comment">//区域属性，这块功能强烈建议看阮老师博客，将区域定为9个命名单元格</span><br>    grid-<span class="hljs-attribute">auto</span>-flow:row; <span class="hljs-comment">//项目排列顺序默认row表示先行后列，先横向再纵向，可选值：column</span><br>    justify-items: start | end | center | stretch; <span class="hljs-comment">//设置单元格内容的水平位置（左中右）</span><br>    <span class="hljs-attribute">align-items</span>: start | end | center | stretch; <span class="hljs-comment">//属性设置单元格内容的垂直位置（上中下）。</span><br>    &lt;!-- place-items: start end; <span class="hljs-comment">//以上两属性合并简写 --&gt;</span><br>    <span class="hljs-comment">//整个内容区域在容器里面的水平位置（左中右）</span><br>    <span class="hljs-attribute">justify-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;<br>    <span class="hljs-comment">//整个内容区域在容器里面的垂直位置（上中下）</span><br>    <span class="hljs-attribute">align-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;<br>    &lt;!-- place-<span class="hljs-attribute">content</span>: space-around space-evenly; <span class="hljs-comment">//以上两属性合并简写  --&gt;</span><br>    grid-<span class="hljs-attribute">auto</span>-rows: <span class="hljs-number">50px</span>; <span class="hljs-comment">//grid-auto-columns属性和grid-auto-rows属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与grid-template-columns和grid-template-rows完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</span><br>&#125;<br></code></pre></td></tr></table></figure><div class="note note-danger">            <p>注意，设为网格布局以后，容器子元素（项目）的float、display: inline-block、display: table-cell、vertical-align和column-*等设置都将失效。</p>          </div><h3 id="项目属性"><a href="#项目属性" class="headerlink" title="项目属性"></a>项目属性</h3><p>顾名思义，只对容器内单个项目item生效的属性</p><pre><code>div .item1&#123;    grid-column-start: 1; //左边框所在的垂直网格线    grid-column-end: 3; //右边框所在的垂直网格线    grid-row-start: 2; //上边框所在的水平网格线    grid-row-end: 4; //下边框所在的水平网格线    &lt;!-- grid-column --&gt;    &lt;!-- grid-row   --&gt;    &lt;!-- 以上合并简写形式  --&gt;    grid-area:a; //属性指定项目放在哪一个区域。和容器属性grid-template-areas搭配使用    justify-self: start | end | center | stretch; //属性设置单元格内容的水平位置（左中右），跟justify-items属性的用法完全一致，但只作用于单个项目。    align-self: start | end | center | stretch; //属性设置单元格内容的垂直位置（上中下），跟align-items属性的用法完全一致，也是只作用于单个项目。    &lt;!-- place-self: center center;//以上两属性合并简写 --&gt;&#125;</code></pre><p>(本文完结，感谢阅读)</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html">阮一峰老师grid布局教程</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid">MDN上的grid布局</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>布局</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css3新特性整理(长期更新总结)</title>
    <link href="/2021/10/12/css3%E6%96%B0%E7%89%B9%E6%80%A7%E6%95%B4%E7%90%86/"/>
    <url>/2021/10/12/css3%E6%96%B0%E7%89%B9%E6%80%A7%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>CSS3是CSS（层叠样式表）技术的升级版本，于1999年开始制订，2001年5月23日W3C完成了CSS3的工作草案，主要包括盒子模型、列表模块、超链接方式、语言模块、背景和边框、文字特效、多栏布局等模块。<code>(以上摘自百度百科，嘿嘿)</code>本文主要整理部分开发中常用到的css3新特性</p><h2 id="1-属性选择器"><a href="#1-属性选择器" class="headerlink" title="1.属性选择器"></a>1.属性选择器</h2><p>以下为css3支持的选择器<br><img src="/img/CSS3img/css3.webp" alt="css3选择器" title="css3选择器"><br>图片来自w3c。这一块建议大家去w3c看<a href="https://www.w3school.com.cn/cssref/css_selectors.asp">(CSS 选择器参考手册)</a>，那里的例子通俗易懂。提供的选择器里面，基本都挺好用的。但是有些不会很常用，比如，<code>:root，:empty，:target，:enabled，:checked</code>。而且几个不推荐使用，网上的说法是性能较差<code>[attribute*=value]，[attribute$=value]，[attribute^=value]</code>，这个我没用过，自行尝试。</p><h2 id="2-过渡效果transition"><a href="#2-过渡效果transition" class="headerlink" title="2.过渡效果transition"></a>2.过渡效果transition</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">transition</span>： CSS属性，花费时间，效果曲线(默认ease)，延迟时间(默认<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*宽度从原始值到制定值的一个过渡，运动曲线ease,运动时间0.5秒，0.2秒后执行过渡*/</span><br><span class="hljs-attribute">transition</span>：<span class="hljs-attribute">width</span>,.<span class="hljs-number">5s</span>,ease,.<span class="hljs-number">2s</span><br><br><span class="hljs-comment">/*所有属性从原始值到制定值的一个过渡，运动曲线ease,运动时间0.5秒*/</span><br><span class="hljs-attribute">transition</span>：all,.<span class="hljs-number">5s</span><br><br><span class="hljs-comment">/*以上为简写，下面为单属性*/</span><br><span class="hljs-attribute">transition-property</span>: width;<br><span class="hljs-attribute">transition-duration</span>: <span class="hljs-number">1s</span>;<br><span class="hljs-attribute">transition-timing-function</span>: linear;<br><span class="hljs-attribute">transition-delay</span>: <span class="hljs-number">2s</span>;<br></code></pre></td></tr></table></figure><h2 id="3-动画animation"><a href="#3-动画animation" class="headerlink" title="3.动画animation"></a>3.动画animation</h2><p>动画分为两部分执行  </p><ul><li>@keyframes定义动画  </li><li>animation开启动画<h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">animation</span>：@keyframes定义的动画名称，一个周期花费时间，运动曲线（默认ease），动画延迟（默认<span class="hljs-number">0</span>），播放次数（默认<span class="hljs-number">1</span>），是否反向播放动画（默认normal），是否暂停动画（默认running）<br></code></pre></td></tr></table></figure><h3 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs css"> <span class="hljs-comment">/*定义一个名为logo2-line的动画*/</span><br><span class="hljs-keyword">@keyframes</span> logo2-line &#123;<br>    <span class="hljs-number">0%</span>&#123;<br>        <span class="hljs-attribute">transform</span>:<span class="hljs-built_in">rotate</span>(<span class="hljs-number">180deg</span>);<br>        <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-number">100%</span>&#123;<br>        <span class="hljs-attribute">transform</span>:<span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);<br>        <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*执行一次logo2-line动画，运动时间2秒，运动曲线为 linear*/</span><br><span class="hljs-attribute">animation</span>: logo2-line <span class="hljs-number">2s</span> linear;<br><br><span class="hljs-comment">/*2秒后开始执行一次logo2-line动画，运动时间2秒，运动曲线为 linear*/</span><br><span class="hljs-attribute">animation</span>: logo2-line <span class="hljs-number">2s</span> linear <span class="hljs-number">2s</span>;<br><br><span class="hljs-comment">/*无限执行logo2-line动画，每次运动时间2秒，运动曲线为 linear，并且执行反向动画*/</span><br><span class="hljs-attribute">animation</span>: logo2-line <span class="hljs-number">2s</span> linear alternate infinite;<br></code></pre></td></tr></table></figure></li></ul><p>重要属性</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs coq">animation-fill-mode : none | <span class="hljs-type">forwards</span> | <span class="hljs-type">backwards</span> | <span class="hljs-type">both</span>;<br>/*none：不改变默认行为。    <br>forwards ：当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。    <br>backwards：在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。 <br>both：向前和向后填充模式都被应用。  */  <br></code></pre></td></tr></table></figure><p>动画这边只做简单的整理 因为知识点实在太多了，有需要的大哥还请自行<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Animations/Using_CSS_animations">MDN</a>学习  </p><h2 id="4-阴影效果box-shadow"><a href="#4-阴影效果box-shadow" class="headerlink" title="4.阴影效果box-shadow"></a>4.阴影效果box-shadow</h2><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">box-shadow</span>: 水平阴影的位置 垂直阴影的位置 模糊距离 阴影的大小 阴影的颜色 阴影开始方向(默认是从里往外，设置inset就是从外往里)<br></code></pre></td></tr></table></figure><h3 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">box</span>-shadow: <span class="hljs-number">10</span>px <span class="hljs-number">10</span>px <span class="hljs-number">5</span>px #<span class="hljs-number">888888</span>;<br></code></pre></td></tr></table></figure><h2 id="5-边框border"><a href="#5-边框border" class="headerlink" title="5.边框border"></a>5.边框border</h2><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">border</span>: 边框的宽度 边框的样式 边框颜色 规定应该从父元素继承<span class="hljs-built_in">border</span>属性的设置(非常用)<br></code></pre></td></tr></table></figure><h3 id="举例-3"><a href="#举例-3" class="headerlink" title="举例"></a>举例</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">/*设置四边宽度为2px  样式为soild  颜色为#000的边框*/</span><br><span class="hljs-attribute">border</span>:<span class="hljs-number">2px</span> soild <span class="hljs-number">#000</span><br><br><span class="hljs-comment">/*单独设置每个方向的边框线，css属性如下*/</span><br><span class="hljs-attribute">border-left</span><br><span class="hljs-attribute">border-top</span><br><span class="hljs-attribute">border-right</span><br><span class="hljs-attribute">border-bottom</span><br></code></pre></td></tr></table></figure><p><strong>常用属性:边框弧度，常用来写圆角边框</strong></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-comment">/*圆角边框，常用属性*/</span><br><span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>:定义圆角的大小(可用百分比)<br><br><span class="hljs-comment">/*设置10px的圆角大小*/</span><br><span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>:10px  <br></code></pre></td></tr></table></figure><h2 id="6-文字相关"><a href="#6-文字相关" class="headerlink" title="6.文字相关"></a>6.文字相关</h2><ul><li><h3 id="文字溢出text-overflow"><a href="#文字溢出text-overflow" class="headerlink" title="文字溢出text-overflow"></a>文字溢出text-overflow</h3><h4 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">text-overflow:溢出内容展示方式(clip/ellipsis);<br></code></pre></td></tr></table></figure><h4 id="举例-4"><a href="#举例-4" class="headerlink" title="举例"></a>举例</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 溢出内容以裁切的方式展示 */</span><br><span class="hljs-selector-class">.test1</span> &#123;<br>  <span class="hljs-attribute">white-space</span>: nowrap; <br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>; <br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">text-overflow</span>: clip; <br>&#125;<br><br><span class="hljs-comment">/* 溢出内容以省略号方式展示(常用) */</span><br><span class="hljs-selector-class">.test2</span> &#123;<br>  <span class="hljs-attribute">white-space</span>: nowrap; <br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>; <br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">text-overflow</span>: ellipsis; <br>&#125;<br></code></pre></td></tr></table></figure></li><li><h3 id="文字换行word-break"><a href="#文字换行word-break" class="headerlink" title="文字换行word-break"></a>文字换行word-break</h3><h4 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h4><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs glsl">word-<span class="hljs-keyword">break</span>:换行规则(keep-<span class="hljs-built_in">all</span>/<span class="hljs-keyword">break</span>-<span class="hljs-built_in">all</span>)<br></code></pre></td></tr></table></figure><h4 id="举例-5"><a href="#举例-5" class="headerlink" title="举例"></a>举例</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"> </span><br><span class="css"><span class="hljs-comment">/*keep-all将会在连字符-处打断*/</span></span><br><span class="css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test1</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">140px</span>; </span><br><span class="css">  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;</span><br><span class="css">  <span class="hljs-attribute">word-break</span>: keep-all;</span><br><span class="css">&#125;</span><br><span class="css"></span><br><span class="css"><span class="hljs-comment">/*break-all任意字符处打断*/</span></span><br><span class="css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test2</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">140px</span>; </span><br><span class="css">  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;</span><br><span class="css">  <span class="hljs-attribute">word-break</span>: break-all;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>word-break 属性<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test1&quot;</span>&gt;</span>看什么看-干嘛瞪着眼睛看着我<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test2&quot;</span>&gt;</span>看什么看-干嘛瞪着眼睛看着我<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>注释：<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>Opera 12 和更早版本不支持 word-break 属性。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><h3 id="书写模式writing-mode"><a href="#书写模式writing-mode" class="headerlink" title="书写模式writing-mode"></a>书写模式writing-mode</h3><h4 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">writing-<span class="hljs-keyword">mode</span>:书写模式(horizontal-tb/<span class="hljs-keyword">vertical</span>-rl)<br></code></pre></td></tr></table></figure><h4 id="举例-6"><a href="#举例-6" class="headerlink" title="举例"></a>举例</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"> </span><br><span class="css"><span class="hljs-comment">/*标准模式，自左向右横向书写*/</span></span><br><span class="css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test1</span> &#123;</span><br><span class="css">  writing-mode: horizontal-tb; </span><br><span class="css">&#125;</span><br><span class="css"></span><br><span class="css"><span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.test2</span> &#123;</span><br><span class="css">  writing-mode: vertical-rl; </span><br><span class="css">&#125;</span><br><span class="css"></span><br><span class="css"><span class="hljs-comment">/*纵向模式自上而下书写*/</span></span><br><span class="css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.test2</span> &#123;</span><br><span class="css">  writing-mode: vertical-rl; </span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>writing-mode 属性<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test1&quot;</span>&gt;</span>Some text with default writing-mode.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Some text with a span element with a <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test2&quot;</span>&gt;</span>vertical-rl<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> writing-mode.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test2&quot;</span>&gt;</span>Some text with writing-mode: vertical-rl.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><h3 id="固定行数加省略-常用"><a href="#固定行数加省略-常用" class="headerlink" title="固定行数加省略(常用)"></a>固定行数加省略(常用)</h3><h4 id="举例-7"><a href="#举例-7" class="headerlink" title="举例"></a>举例</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">text-overflow</span>: ellipsis;（添加省略号）<br>  <span class="hljs-attribute">display</span>: -webkit-box;<br>  -webkit-line-clamp: <span class="hljs-number">2</span>;（控制文本行数）<br>  -webkit-box-orient: vertical;（子元素排列方式）<br>&#125;<br><span class="hljs-comment">/*如果你标签内的是英文，英文是不会自动换行的，所以你需要让他自动换行添加如下代码：*/</span><br><span class="hljs-attribute">word-wrap</span>:break-word;<br><span class="hljs-attribute">word-break</span>:break-all;<br></code></pre></td></tr></table></figure><h2 id="7-待补充"><a href="#7-待补充" class="headerlink" title="7.待补充"></a>7.待补充</h2></li></ul><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料:"></a>参考资料:</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">MDN上的CSS教程</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.w3school.com.cn/cssref/css_selectors.asp">W3C上的css3选择器</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown语法入门</title>
    <link href="/2021/10/09/markdown%E8%AF%AD%E6%B3%95%E5%85%A5%E9%97%A8/"/>
    <url>/2021/10/09/markdown%E8%AF%AD%E6%B3%95%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Markdown基础语法使用"><a href="#Markdown基础语法使用" class="headerlink" title="Markdown基础语法使用"></a>Markdown基础语法使用</h1><p>网上找到了个人认为最适合新手的<a href="https://markdown.com.cn/basic-syntax/"><strong>Markdown教程</strong></a>，故不自己写了</p>]]></content>
    
    
    <categories>
      
      <category>标记语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
